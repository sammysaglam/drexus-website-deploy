import { NextRequest, NextResponse } from "next/server";
import { Resend } from "resend";
import { z } from "zod";

const resend = new Resend(process.env.RESEND_API_KEY);

const contactFormSchema = z.object({
  name: z.string().min(1, "Name is required"),
  email: z.string().email("Invalid email address"),
  company: z.string().optional(),
  phone: z.string().optional(),
  inquiryType: z.string().min(1, "Inquiry type is required"),
  subject: z.string().min(1, "Subject is required"),
  message: z.string().min(1, "Message is required"),
});

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();

    // Validate the request body
    const validatedData = contactFormSchema.parse(body);

    // Send email notification to Drexus team
    const result = await resend.emails.send({
      from: "Drexus Contact Form <noreply@notifications.drexus.com>",
      to: ["giordano.carreiro@digalyze.com"], // Replace with your actual email
      subject: `New Contact Form Submission: ${validatedData.subject}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #1e40af;">New Contact Form Submission</h2>

          <div style="background-color: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #374151; margin-top: 0;">Contact Details</h3>
            <p><strong>Name:</strong> ${validatedData.name}</p>
            <p><strong>Email:</strong> ${validatedData.email}</p>
            ${validatedData.company ? `<p><strong>Company:</strong> ${validatedData.company}</p>` : ""}
            ${validatedData.phone ? `<p><strong>Phone:</strong> ${validatedData.phone}</p>` : ""}
            <p><strong>Inquiry Type:</strong> ${validatedData.inquiryType}</p>
            <p><strong>Subject:</strong> ${validatedData.subject}</p>
            <p><strong>Timestamp:</strong> ${new Date().toISOString()}</p>
          </div>

          <div style="background-color: #f0f9ff; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #374151; margin-top: 0;">Message</h3>
            <p style="white-space: pre-wrap; line-height: 1.6;">${validatedData.message}</p>
          </div>

          <div style="background-color: #eff6ff; padding: 15px; border-radius: 8px; border-left: 4px solid #3b82f6;">
            <p style="margin: 0; color: #1e40af;">
              <strong>Next Steps:</strong> Follow up with this contact within 24 hours to maintain our high response standards.
            </p>
          </div>

          <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 20px 0;">
          <p style="color: #6b7280; font-size: 14px;">
            This email was automatically generated by the Drexus contact form.
          </p>
        </div>
      `,
    });

    // Send auto-reply to the customer
    const autoReplyResult = await resend.emails.send({
      from: "Drexus <hello@notifications.drexus.com>",
      to: [validatedData.email],
      subject: "Thank you for contacting Drexus - We'll be in touch soon!",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <div style="text-align: center; margin-bottom: 30px;">
            <h1 style="color: #1e3a8a; font-size: 28px; margin-bottom: 10px;">Thank You for Reaching Out!</h1>
            <p style="color: #6b7280; font-size: 16px;">We've received your message and will respond within 24 hours</p>
          </div>

          <div style="background: #f8fafc; border-radius: 8px; margin-bottom: 20px; padding: 20px;">
            <h2 style="color: #1e3a8a; font-size: 20px; margin-bottom: 15px;">What Happens Next?</h2>
            <ul style="color: #374151; line-height: 1.6; padding-left: 20px;">
              <li>Our team will review your inquiry within 24 hours</li>
              <li>We'll reach out to schedule a brief discovery call</li>
              <li>During the call, we'll understand your needs and share how we can help</li>
              <li>If there's a good fit, we'll provide a tailored proposal</li>
            </ul>
          </div>

          <div style="background: #eff6ff; padding: 20px; border-radius: 8px; border-left: 4px solid #3b82f6; margin-bottom: 20px;">
            <h3 style="color: #1e3a8a; font-size: 16px; margin-bottom: 10px;">In the Meantime</h3>
            <p style="color: #374151; line-height: 1.6; margin-bottom: 15px;">
              Explore our strategic tools and resources to get a head start on your project planning.
            </p>
            <div style="text-align: center;">
              <a href="https://drexus.com/tools"
                 style="background: #1e3a8a; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; font-weight: 600;">
                Explore Our Tools
              </a>
            </div>
          </div>

          <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
            <p style="color: #9ca3af; font-size: 12px; margin-bottom: 5px;">
              Best regards,<br>
              The Drexus Team
            </p>
            <p style="color: #9ca3af; font-size: 12px;">
              <a href="https://drexus.com/legal/privacy" style="color: #6b7280;">Privacy Policy</a>
            </p>
          </div>
        </div>
      `,
    });

    return NextResponse.json(
      {
        success: true,
        message: "Contact form submitted successfully",
        data: {
          notificationSent: result.data?.id,
          autoReplySent: autoReplyResult.data?.id,
        },
      },
      { status: 200 }
    );
  } catch (error) {
    console.error("Contact form API error:", error);

    if (error instanceof z.ZodError) {
      return NextResponse.json(
        {
          success: false,
          message: "Validation error",
          errors: error.issues,
        },
        { status: 400 }
      );
    }

    return NextResponse.json(
      {
        success: false,
        message: "Failed to submit contact form",
        error: error instanceof Error ? error.message : "Unknown error",
      },
      { status: 500 }
    );
  }
}

// Handle OPTIONS request for CORS
export async function OPTIONS() {
  return new NextResponse(null, {
    status: 200,
    headers: {
      "Access-Control-Allow-Origin": "*",
      "Access-Control-Allow-Methods": "POST, OPTIONS",
      "Access-Control-Allow-Headers": "Content-Type",
    },
  });
}
